/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.13).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Crust;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2019-11-10T22:37:07.679Z[GMT]")
@Api(value = "crusts", description = "the crusts API")
public interface CrustsApi {

    @ApiOperation(value = "returns information about the given crust.", nickname = "getCrustByName", notes = "Get information of the given crust ", response = Crust.class, responseContainer = "List", tags={ "developers", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "information about the given crust", response = Crust.class, responseContainer = "List"),
        @ApiResponse(code = 400, message = "bad input parameter") })
    @RequestMapping(value = "/crusts/{crustName}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Crust> getCrustByName(@ApiParam(value = "crustName",required=true) @PathVariable("crustName") String crustName);


    @ApiOperation(value = "returns all crust options", nickname = "getCrusts", notes = "Get list of all crusts ", response = Crust.class, responseContainer = "List", tags={ "developers", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "list of all crusts", response = Crust.class, responseContainer = "List"),
        @ApiResponse(code = 400, message = "bad input parameter") })
    @RequestMapping(value = "/crusts",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Crust>> getCrusts();

}
