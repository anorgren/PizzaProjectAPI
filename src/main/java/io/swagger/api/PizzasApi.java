/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.13).
 * https://github.com/swagger-api/swagger-codegen Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;
import io.swagger.model.Pizza;
import java.util.List;
import javax.validation.Valid;
import javax.validation.constraints.NotNull;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2019-11-11T04:07:33.221Z[GMT]")
@Api(value = "pizzas", description = "the pizzas API")
public interface PizzasApi {

  @ApiOperation(value = "creates a Pizza", nickname = "createPizza", notes = "Validates and creates pizza object using the parameters provided ", response = Pizza.class, tags = {"developers",})
  @ApiResponses(value = {
          @ApiResponse(code = 200, message = "pizza", response = Pizza.class),
          @ApiResponse(code = 400, message = "bad input parameter")})
  @RequestMapping(value = "/pizzas",
          produces = {"application/json"},
          method = RequestMethod.PUT)
  ResponseEntity<Pizza> createPizza(@NotNull @ApiParam(value = "size description", required = true) @Valid @RequestParam(value = "size", required = true) String size,
                                    @NotNull @ApiParam(value = "crustName", required = true) @Valid @RequestParam(value = "crustName", required = true) String crustName,
                                    @NotNull @ApiParam(value = "sauceName", required = true) @Valid @RequestParam(value = "sauceName", required = true) String sauceName,
                                    @ApiParam(value = "pizza name") @Valid @RequestParam(value = "pizzaName", required = false) String pizzaName,
                                    @ApiParam(value = "topping name list(max 5 toppings)") @Valid @RequestParam(value = "toppingName", required = true) List<String> toppingNames) throws ApiException;


  @ApiOperation(value = "returns information about the given pizza.", nickname = "getPizzaByName", notes = "Get information of the given pizza ", response = Pizza.class, responseContainer = "List", tags = {"developers",})
  @ApiResponses(value = {
          @ApiResponse(code = 200, message = "information about the given pizza", response = Pizza.class, responseContainer = "List"),
          @ApiResponse(code = 400, message = "bad input parameter")})
  @RequestMapping(value = "/pizzas/{pizzaName}",
          produces = {"application/json"},
          method = RequestMethod.GET)
  ResponseEntity<Pizza> getPizzaByName(@ApiParam(value = "pizzaName", required = true) @PathVariable("pizzaName") String pizzaName);


  @ApiOperation(value = "returns all pizzas", nickname = "getPizzas", notes = "Get list of all pizzas ", response = Pizza.class, responseContainer = "List", tags = {"developers",})
  @ApiResponses(value = {
          @ApiResponse(code = 200, message = "list of all pizzas", response = Pizza.class, responseContainer = "List"),
          @ApiResponse(code = 400, message = "bad input parameter")})
  @RequestMapping(value = "/pizzas",
          produces = {"application/json"},
          method = RequestMethod.GET)
  ResponseEntity<List<Pizza>> getPizzas();

}
